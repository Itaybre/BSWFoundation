{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/apiclient\/loggingconfiguration-swift.struct\/init(requestbehaviour:responsebehaviour:)","title":"init(requestBehaviour: Behavior, responseBehaviour: Behavior)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/apiclient\/loggingconfiguration-swift.struct\/requestbehaviour","title":"let requestBehaviour: Behavior","type":"property"},{"path":"\/documentation\/bswfoundation\/apiclient\/loggingconfiguration-swift.struct\/responsebehaviour","title":"let responseBehaviour: Behavior","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/apiclient\/loggingconfiguration-swift.struct\/default","title":"static var `default`: APIClient.LoggingConfiguration","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/apiclient\/loggingconfiguration-swift.struct\/behavior\/all","title":"case all","type":"case"},{"path":"\/documentation\/bswfoundation\/apiclient\/loggingconfiguration-swift.struct\/behavior\/none","title":"case none","type":"case"},{"path":"\/documentation\/bswfoundation\/apiclient\/loggingconfiguration-swift.struct\/behavior\/onlyfailing","title":"case onlyFailing","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/apiclient\/loggingconfiguration-swift.struct\/behavior\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bswfoundation\/apiclient\/loggingconfiguration-swift.struct\/behavior\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bswfoundation\/apiclient\/loggingconfiguration-swift.struct\/behavior","title":"APIClient.LoggingConfiguration.Behavior","type":"enum"}],"path":"\/documentation\/bswfoundation\/apiclient\/loggingconfiguration-swift.struct","title":"APIClient.LoggingConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/apiclient\/response\/init(data:httpresponse:)","title":"init(data: Data, httpResponse: HTTPURLResponse)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/apiclient\/response\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/bswfoundation\/apiclient\/response\/httpresponse","title":"let httpResponse: HTTPURLResponse","type":"property"}],"path":"\/documentation\/bswfoundation\/apiclient\/response","title":"APIClient.Response","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/apiclient\/init(environment:networkfetcher:)","title":"init(environment: Environment, networkFetcher: APIClientNetworkFetcher?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/apiclient\/currentenvironment","title":"var currentEnvironment: Environment","type":"property"},{"path":"\/documentation\/bswfoundation\/apiclient\/customizerequest","title":"var customizeRequest: (URLRequest) -> (URLRequest)","type":"property"},{"path":"\/documentation\/bswfoundation\/apiclient\/delegate","title":"var delegate: APIClientDelegate?","type":"property"},{"path":"\/documentation\/bswfoundation\/apiclient\/loggingconfiguration-swift.property","title":"var loggingConfiguration: APIClient.LoggingConfiguration","type":"property"},{"path":"\/documentation\/bswfoundation\/apiclient\/maperror","title":"var mapError: (Swift.Error) -> (Swift.Error)","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/apiclient\/perform(_:)","title":"func perform<T>(Request<T>) async throws -> T","type":"method"},{"path":"\/documentation\/bswfoundation\/apiclient\/performsimplerequest(forendpoint:)","title":"func performSimpleRequest(forEndpoint: Endpoint) async throws -> APIClient.Response","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/apiclient\/error\/encodingrequestfailed","title":"case encodingRequestFailed","type":"case"},{"path":"\/documentation\/bswfoundation\/apiclient\/error\/failurestatuscode(_:_:)","title":"case failureStatusCode(Int, Data?)","type":"case"},{"path":"\/documentation\/bswfoundation\/apiclient\/error\/malformedresponse","title":"case malformedResponse","type":"case"},{"path":"\/documentation\/bswfoundation\/apiclient\/error\/malformedurl","title":"case malformedURL","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/apiclient\/error\/isurlcancelled","title":"var isURLCancelled: Bool","type":"property"},{"path":"\/documentation\/bswfoundation\/apiclient\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bswfoundation\/apiclient\/error\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/apiclient\/error\/isurlcancelled","title":"var isURLCancelled: Bool","type":"property"},{"path":"\/documentation\/bswfoundation\/apiclient\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bswfoundation\/apiclient\/error\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/apiclient\/error\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/bswfoundation\/apiclient\/error\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/bswfoundation\/apiclient\/error\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/bswfoundation\/apiclient\/error\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/bswfoundation\/apiclient\/error\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/bswfoundation\/apiclient\/error","title":"APIClient.Error","type":"enum"}],"path":"\/documentation\/bswfoundation\/apiclient","title":"APIClient","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/authstorage\/init(style:)","title":"init(style: Style)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/authstorage\/authtoken","title":"var authToken: String?","type":"property"},{"path":"\/documentation\/bswfoundation\/authstorage\/jwttoken","title":"var jwtToken: String?","type":"property"},{"path":"\/documentation\/bswfoundation\/authstorage\/refreshtoken","title":"var refreshToken: String?","type":"property"},{"path":"\/documentation\/bswfoundation\/authstorage\/tokenisexpired","title":"var tokenIsExpired: Bool","type":"property"},{"path":"\/documentation\/bswfoundation\/authstorage\/userid","title":"var userID: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/authstorage\/clearkeychain()","title":"func clearKeychain()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/authstorage\/defaultstorage","title":"static let defaultStorage: AuthStorage","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/authstorage\/extractbodyfromjwt(_:)","title":"static func extractBodyFromJWT(String) -> [String : Any]?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/authstorage\/style\/appgroup(id:appname:)","title":"case appGroup(id: String, appName: String)","type":"case"},{"path":"\/documentation\/bswfoundation\/authstorage\/style\/simple","title":"case simple","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/authstorage\/style\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bswfoundation\/authstorage\/style\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bswfoundation\/authstorage\/style","title":"AuthStorage.Style","type":"enum"}],"path":"\/documentation\/bswfoundation\/authstorage","title":"AuthStorage","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/codablekeychainbacked\/init(key:)","title":"init(key: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/codablekeychainbacked\/wrappedvalue","title":"var wrappedValue: T?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/codablekeychainbacked\/reset()","title":"func reset()","type":"method"}],"path":"\/documentation\/bswfoundation\/codablekeychainbacked","title":"CodableKeychainBacked","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/codableuserdefaultsbacked\/init(key:defaultvalue:appgroupid:)","title":"init(key: String, defaultValue: T?, appGroupID: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/codableuserdefaultsbacked\/wrappedvalue","title":"var wrappedValue: T?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/codableuserdefaultsbacked\/reset()","title":"func reset()","type":"method"}],"path":"\/documentation\/bswfoundation\/codableuserdefaultsbacked","title":"CodableUserDefaultsBacked","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/keychainbacked\/init(key:appgroupid:)","title":"init(key: String, appGroupID: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/keychainbacked\/wrappedvalue","title":"var wrappedValue: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/keychainbacked\/reset()","title":"func reset()","type":"method"}],"path":"\/documentation\/bswfoundation\/keychainbacked","title":"KeychainBacked","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/locationfetcher\/desiredaccuracy","title":"let desiredAccuracy: CLLocationAccuracy","type":"property"},{"path":"\/documentation\/bswfoundation\/locationfetcher\/lastknownlocation","title":"var lastKnownLocation: CLLocation?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/locationfetcher\/fetchcurrentlocation(_:)","title":"func fetchCurrentLocation(Bool) async throws -> CLLocation","type":"method"},{"path":"\/documentation\/bswfoundation\/locationfetcher\/locationmanager(_:didchangeauthorization:)","title":"func locationManager(CLLocationManager, didChangeAuthorization: CLAuthorizationStatus)","type":"method"},{"path":"\/documentation\/bswfoundation\/locationfetcher\/locationmanager(_:didfailwitherror:)","title":"func locationManager(CLLocationManager, didFailWithError: Error)","type":"method"},{"path":"\/documentation\/bswfoundation\/locationfetcher\/locationmanager(_:didupdatelocations:)","title":"func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/locationfetcher\/fetcher","title":"static let fetcher: LocationFetcher","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/locationfetcher\/locationerrors\/authorizationdenied","title":"case authorizationDenied","type":"case"},{"path":"\/documentation\/bswfoundation\/locationfetcher\/locationerrors\/unknown","title":"case unknown","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/locationfetcher\/locationerrors\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bswfoundation\/locationfetcher\/locationerrors\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/locationfetcher\/locationerrors\/isurlcancelled","title":"var isURLCancelled: Bool","type":"property"},{"path":"\/documentation\/bswfoundation\/locationfetcher\/locationerrors\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bswfoundation\/locationfetcher\/locationerrors\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/locationfetcher\/locationerrors\/isurlcancelled","title":"var isURLCancelled: Bool","type":"property"},{"path":"\/documentation\/bswfoundation\/locationfetcher\/locationerrors\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bswfoundation\/locationfetcher\/locationerrors\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/bswfoundation\/locationfetcher\/locationerrors","title":"LocationFetcher.LocationErrors","type":"enum"}],"path":"\/documentation\/bswfoundation\/locationfetcher","title":"LocationFetcher","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/mocknetworkfetcher\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/mocknetworkfetcher\/capturedurlrequest","title":"var capturedURLRequest: URLRequest?","type":"property"},{"path":"\/documentation\/bswfoundation\/mocknetworkfetcher\/mockeddata","title":"var mockedData: Data!","type":"property"},{"path":"\/documentation\/bswfoundation\/mocknetworkfetcher\/mockedstatuscode","title":"var mockedStatusCode: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/mocknetworkfetcher\/fetchdata(with:)","title":"func fetchData(with: URLRequest) async throws -> APIClient.Response","type":"method"},{"path":"\/documentation\/bswfoundation\/mocknetworkfetcher\/uploadfile(with:fileurl:)","title":"func uploadFile(with: URLRequest, fileURL: URL) async throws -> APIClient.Response","type":"method"}],"path":"\/documentation\/bswfoundation\/mocknetworkfetcher","title":"MockNetworkFetcher","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/progressobserver\/init(progress:onupdate:)","title":"init(progress: Progress, onUpdate: (Progress) -> Void)","type":"init"}],"path":"\/documentation\/bswfoundation\/progressobserver","title":"ProgressObserver","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/throttler\/init(seconds:queue:)","title":"init(seconds: Double, queue: DispatchQueue)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/throttler\/throttle(block:)","title":"func throttle(block: () -> ())","type":"method"}],"path":"\/documentation\/bswfoundation\/throttler","title":"Throttler","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/userdefaultsbacked\/init(key:defaultvalue:appgroupid:)","title":"init(key: String, defaultValue: T?, appGroupID: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/userdefaultsbacked\/wrappedvalue","title":"var wrappedValue: T?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/userdefaultsbacked\/reset()","title":"func reset()","type":"method"}],"path":"\/documentation\/bswfoundation\/userdefaultsbacked","title":"UserDefaultsBacked","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/bswfoundation\/apiclientdelegate\/apiclientdidreceiveerror(_:forrequest:apiclient:)-3npcp","title":"func apiClientDidReceiveError(Error, forRequest: String, apiClient: APIClient) async","type":"method"}],"title":"APIClientDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/bswfoundation\/apiclientdelegate\/apiclientdidreceiveerror(_:forrequest:apiclient:)-8et1y","title":"func apiClientDidReceiveError(Error, forRequest: String, apiClient: APIClient) async","type":"method"},{"path":"\/documentation\/bswfoundation\/apiclientdelegate\/apiclientdidreceiveunauthorized(forrequest:apiclient:)","title":"func apiClientDidReceiveUnauthorized(forRequest: String, apiClient: APIClient) async throws -> Bool","type":"method"}],"path":"\/documentation\/bswfoundation\/apiclientdelegate","title":"APIClientDelegate","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/apiclientnetworkfetcher\/fetchdata(with:)","title":"func fetchData(with: URLRequest) async throws -> APIClient.Response","type":"method"},{"path":"\/documentation\/bswfoundation\/apiclientnetworkfetcher\/uploadfile(with:fileurl:)","title":"func uploadFile(with: URLRequest, fileURL: URL) async throws -> APIClient.Response","type":"method"}],"path":"\/documentation\/bswfoundation\/apiclientnetworkfetcher","title":"APIClientNetworkFetcher","type":"protocol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/datedecodingstrategyprovider\/datedecodingstrategy","title":"static var dateDecodingStrategy: DateFormatter","type":"property"}],"path":"\/documentation\/bswfoundation\/datedecodingstrategyprovider","title":"DateDecodingStrategyProvider","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/bswfoundation\/endpoint\/httpheaderfields-7c0r3","title":"var httpHeaderFields: HTTPHeaders?","type":"property"}],"title":"Endpoint Implementations","type":"groupMarker"}],"path":"\/documentation\/bswfoundation\/endpoint\/httpheaderfields-6hxj4","title":"var httpHeaderFields: HTTPHeaders?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/bswfoundation\/endpoint\/method-58rlf","title":"var method: HTTPMethod","type":"property"}],"title":"Endpoint Implementations","type":"groupMarker"}],"path":"\/documentation\/bswfoundation\/endpoint\/method-2lv31","title":"var method: HTTPMethod","type":"property"},{"children":[{"children":[{"path":"\/documentation\/bswfoundation\/endpoint\/parameterencoding-4gfwk","title":"var parameterEncoding: HTTPParameterEncoding","type":"property"}],"title":"Endpoint Implementations","type":"groupMarker"}],"path":"\/documentation\/bswfoundation\/endpoint\/parameterencoding-9m2s9","title":"var parameterEncoding: HTTPParameterEncoding","type":"property"},{"children":[{"children":[{"path":"\/documentation\/bswfoundation\/endpoint\/parameters-92lp9","title":"var parameters: [String : Any]?","type":"property"}],"title":"Endpoint Implementations","type":"groupMarker"}],"path":"\/documentation\/bswfoundation\/endpoint\/parameters-9za0a","title":"var parameters: [String : Any]?","type":"property"},{"path":"\/documentation\/bswfoundation\/endpoint\/path","title":"var path: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/bswfoundation\/endpoint\/timeoutinterval-25skp","title":"var timeoutInterval: TimeInterval?","type":"property"}],"title":"Endpoint Implementations","type":"groupMarker"}],"path":"\/documentation\/bswfoundation\/endpoint\/timeoutinterval-7my2c","title":"var timeoutInterval: TimeInterval?","type":"property"}],"path":"\/documentation\/bswfoundation\/endpoint","title":"Endpoint","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/environment\/baseurl","title":"var baseURL: URL","type":"property"},{"children":[{"children":[{"path":"\/documentation\/bswfoundation\/environment\/shouldallowinsecureconnections-12azx","title":"var shouldAllowInsecureConnections: Bool","type":"property"}],"title":"Environment Implementations","type":"groupMarker"}],"path":"\/documentation\/bswfoundation\/environment\/shouldallowinsecureconnections-4iwle","title":"var shouldAllowInsecureConnections: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/environment\/routeurl(_:)","title":"func routeURL(String) -> String","type":"method"}],"path":"\/documentation\/bswfoundation\/environment","title":"Environment","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/jwt\/audience","title":"var audience: [String]?","type":"property"},{"path":"\/documentation\/bswfoundation\/jwt\/body","title":"var body: [String : Any]","type":"property"},{"path":"\/documentation\/bswfoundation\/jwt\/expired","title":"var expired: Bool","type":"property"},{"path":"\/documentation\/bswfoundation\/jwt\/expiresat","title":"var expiresAt: Date?","type":"property"},{"path":"\/documentation\/bswfoundation\/jwt\/header","title":"var header: [String : Any]","type":"property"},{"path":"\/documentation\/bswfoundation\/jwt\/identifier","title":"var identifier: String?","type":"property"},{"path":"\/documentation\/bswfoundation\/jwt\/issuedat","title":"var issuedAt: Date?","type":"property"},{"path":"\/documentation\/bswfoundation\/jwt\/issuer","title":"var issuer: String?","type":"property"},{"path":"\/documentation\/bswfoundation\/jwt\/notbefore","title":"var notBefore: Date?","type":"property"},{"path":"\/documentation\/bswfoundation\/jwt\/signature","title":"var signature: String?","type":"property"},{"path":"\/documentation\/bswfoundation\/jwt\/string","title":"var string: String","type":"property"},{"path":"\/documentation\/bswfoundation\/jwt\/subject","title":"var subject: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/jwt\/claim(name:)","title":"func claim(name: String) -> Claim","type":"method"}],"path":"\/documentation\/bswfoundation\/jwt","title":"JWT","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/claim\/array","title":"var array: [String]?","type":"property"},{"path":"\/documentation\/bswfoundation\/claim\/date","title":"var date: Date?","type":"property"},{"path":"\/documentation\/bswfoundation\/claim\/double","title":"var double: Double?","type":"property"},{"path":"\/documentation\/bswfoundation\/claim\/integer","title":"var integer: Int?","type":"property"},{"path":"\/documentation\/bswfoundation\/claim\/string","title":"var string: String?","type":"property"}],"path":"\/documentation\/bswfoundation\/claim","title":"Claim","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/failablecodablearray\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/failablecodablearray\/elements","title":"var elements: [Element]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/failablecodablearray\/datedecodingstrategy","title":"static var dateDecodingStrategy: DateFormatter","type":"property"}],"path":"\/documentation\/bswfoundation\/failablecodablearray\/datedecodingstrategyprovider-implementations","title":"DateDecodingStrategyProvider Implementations","type":"symbol"}],"path":"\/documentation\/bswfoundation\/failablecodablearray","title":"FailableCodableArray","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/request\/init(endpoint:shouldretryifunauthorized:validator:)","title":"init(endpoint: Endpoint, shouldRetryIfUnauthorized: Bool, validator: Validator)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/request\/endpoint","title":"let endpoint: Endpoint","type":"property"},{"path":"\/documentation\/bswfoundation\/request\/shouldretryifunauthorized","title":"let shouldRetryIfUnauthorized: Bool","type":"property"},{"path":"\/documentation\/bswfoundation\/request\/validator-swift.property","title":"let validator: Validator","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/request\/validator-swift.typealias","title":"Request.Validator","type":"typealias"}],"path":"\/documentation\/bswfoundation\/request","title":"Request","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/init(options:selectedindex:)","title":"init(options: [T], selectedIndex: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/options","title":"var options: [T]","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/selectedelement","title":"var selectedElement: T?","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/selectedindex","title":"var selectedIndex: Int?","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/startindex","title":"var startIndex: Index","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/appendoption(_:andselectit:)","title":"func appendOption(T, andSelectIt: Bool)","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/appendingoption(_:andselectit:)","title":"func appendingOption(T, andSelectIt: Bool) -> SelectableArray<T>","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/removeselection()","title":"func removeSelection()","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/select(atindex:)","title":"func select(atIndex: Int) -> T","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/updateoption(atindex:option:andselectit:)","title":"func updateOption(atIndex: Int, option: T, andSelectIt: Bool)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/subscript(_:)","title":"subscript(Index) -> Iterator.Element","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/element","title":"SelectableArray.Element","type":"typealias"},{"path":"\/documentation\/bswfoundation\/selectablearray\/index","title":"SelectableArray.Index","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/empty()","title":"static func empty() -> SelectableArray<T>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/selectablearrayerror\/outofboundsindex","title":"case outOfBoundsIndex","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/selectablearrayerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bswfoundation\/selectablearray\/selectablearrayerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/selectablearrayerror\/isurlcancelled","title":"var isURLCancelled: Bool","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/selectablearrayerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bswfoundation\/selectablearray\/selectablearrayerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/selectablearrayerror\/isurlcancelled","title":"var isURLCancelled: Bool","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/selectablearrayerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bswfoundation\/selectablearray\/selectablearrayerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/bswfoundation\/selectablearray\/selectablearrayerror","title":"SelectableArray.SelectableArrayError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/randomelement","title":"var randomElement: Iterator.Element","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/contains(_:)-6zdoq","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/map(_:)-72mrl","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/split(separator:maxsplits:omittingemptysubsequences:)-35ggr","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/split(separator:maxsplits:omittingemptysubsequences:)-38coo","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/bswfoundation\/selectablearray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/count","title":"var count: Int","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/randomelement","title":"var randomElement: Iterator.Element","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/contains(_:)-6zdoq","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/distance(from:to:)","title":"func distance(from: Self.Index, to: Self.Index) -> Int","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/index(_:offsetby:)","title":"func index(Self.Index, offsetBy: Int) -> Self.Index","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/index(_:offsetby:limitedby:)","title":"func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/map(_:)-72mrl","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/split(separator:maxsplits:omittingemptysubsequences:)-35ggr","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/split(separator:maxsplits:omittingemptysubsequences:)-38coo","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/bswfoundation\/selectablearray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bswfoundation\/selectablearray\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/contains(_:)-31xwj","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/find(predicate:)","title":"func find(predicate: (Self.Iterator.Element) throws -> Bool) rethrows -> Self.Iterator.Element?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/flatmap(_:)-2jf0r","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/flatmap(_:)-2pl3q","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/joined(separator:)-8au7l","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/joined(separator:)-m76h","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/map(_:)-9dre9","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/sorted(using:)-24w62","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/sorted(using:)-8np5x","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/split(separator:maxsplits:omittingemptysubsequences:)-4a0xg","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/bswfoundation\/selectablearray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/bswfoundation\/selectablearray\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/selectablearray\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/contains(_:)-31xwj","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/find(predicate:)","title":"func find(predicate: (Self.Iterator.Element) throws -> Bool) rethrows -> Self.Iterator.Element?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/flatmap(_:)-2jf0r","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/flatmap(_:)-2pl3q","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/formatted()","title":"func formatted() -> String","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/joined(separator:)-8au7l","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/joined(separator:)-m76h","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/map(_:)-9dre9","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/sorted(using:)-24w62","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/sorted(using:)-8np5x","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/split(separator:maxsplits:omittingemptysubsequences:)-4a0xg","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/selectablearray\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/bswfoundation\/selectablearray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/bswfoundation\/selectablearray","title":"SelectableArray","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/voidresponse\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/voidresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bswfoundation\/voidresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bswfoundation\/voidresponse","title":"VoidResponse","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/decode(jwt:)","title":"func decode(jwt: String) throws -> JWT","type":"func"},{"path":"\/documentation\/bswfoundation\/delay(_:closure:)","title":"func delay(Double, closure: () -> ())","type":"func"},{"path":"\/documentation\/bswfoundation\/undefined(_:file:line:)","title":"func undefined<T>(String, file: StaticString, line: UInt) -> T","type":"func"},{"path":"\/documentation\/bswfoundation\/with(_:update:)","title":"func with<T>(T, update: (inout T) throws -> Void) rethrows -> T","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/httpheaders","title":"HTTPHeaders","type":"typealias"},{"path":"\/documentation\/bswfoundation\/voidhandler","title":"VoidHandler","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/cryptoalgorithm\/md5","title":"case MD5","type":"case"},{"path":"\/documentation\/bswfoundation\/cryptoalgorithm\/sha1","title":"case SHA1","type":"case"},{"path":"\/documentation\/bswfoundation\/cryptoalgorithm\/sha224","title":"case SHA224","type":"case"},{"path":"\/documentation\/bswfoundation\/cryptoalgorithm\/sha256","title":"case SHA256","type":"case"},{"path":"\/documentation\/bswfoundation\/cryptoalgorithm\/sha384","title":"case SHA384","type":"case"},{"path":"\/documentation\/bswfoundation\/cryptoalgorithm\/sha512","title":"case SHA512","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/cryptoalgorithm\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bswfoundation\/cryptoalgorithm\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bswfoundation\/cryptoalgorithm","title":"CryptoAlgorithm","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/decodeerror\/invalidbase64url(_:)","title":"case invalidBase64Url(String)","type":"case"},{"path":"\/documentation\/bswfoundation\/decodeerror\/invalidjson(_:)","title":"case invalidJSON(String)","type":"case"},{"path":"\/documentation\/bswfoundation\/decodeerror\/invalidpartcount(_:_:)","title":"case invalidPartCount(String, Int)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/decodeerror\/localizeddescription","title":"var localizedDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/decodeerror\/isurlcancelled","title":"var isURLCancelled: Bool","type":"property"}],"path":"\/documentation\/bswfoundation\/decodeerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/decodeerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/bswfoundation\/decodeerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/bswfoundation\/decodeerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/bswfoundation\/decodeerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/bswfoundation\/decodeerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/bswfoundation\/decodeerror","title":"DecodeError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/httpmethod\/connect","title":"case CONNECT","type":"case"},{"path":"\/documentation\/bswfoundation\/httpmethod\/delete","title":"case DELETE","type":"case"},{"path":"\/documentation\/bswfoundation\/httpmethod\/get","title":"case GET","type":"case"},{"path":"\/documentation\/bswfoundation\/httpmethod\/head","title":"case HEAD","type":"case"},{"path":"\/documentation\/bswfoundation\/httpmethod\/options","title":"case OPTIONS","type":"case"},{"path":"\/documentation\/bswfoundation\/httpmethod\/patch","title":"case PATCH","type":"case"},{"path":"\/documentation\/bswfoundation\/httpmethod\/post","title":"case POST","type":"case"},{"path":"\/documentation\/bswfoundation\/httpmethod\/put","title":"case PUT","type":"case"},{"path":"\/documentation\/bswfoundation\/httpmethod\/trace","title":"case TRACE","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/httpmethod\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/httpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bswfoundation\/httpmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/httpmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/httpmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/bswfoundation\/httpmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/bswfoundation\/httpmethod","title":"HTTPMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/httpparameterencoding\/json","title":"case json","type":"case"},{"path":"\/documentation\/bswfoundation\/httpparameterencoding\/url","title":"case url","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/httpparameterencoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bswfoundation\/httpparameterencoding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/bswfoundation\/httpparameterencoding","title":"HTTPParameterEncoding","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/jsonparser\/options","title":"static let Options: JSONSerialization.ReadingOptions","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/jsonparser\/dataisnull(_:)","title":"static func dataIsNull(Data) -> Bool","type":"method"},{"path":"\/documentation\/bswfoundation\/jsonparser\/errormessagefromdata(_:)","title":"static func errorMessageFromData(Data) -> String?","type":"method"},{"path":"\/documentation\/bswfoundation\/jsonparser\/parsedata(_:)","title":"static func parseData<T>(Data) throws -> T","type":"method"},{"path":"\/documentation\/bswfoundation\/jsonparser\/parsedataasjsonprettyprint(_:)","title":"static func parseDataAsJSONPrettyPrint(Data) -> String?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/jsonparser\/error\/canceled","title":"case canceled","type":"case"},{"path":"\/documentation\/bswfoundation\/jsonparser\/error\/malformedjson","title":"case malformedJSON","type":"case"},{"path":"\/documentation\/bswfoundation\/jsonparser\/error\/malformedschema","title":"case malformedSchema","type":"case"},{"path":"\/documentation\/bswfoundation\/jsonparser\/error\/unknownerror","title":"case unknownError","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/jsonparser\/error\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bswfoundation\/jsonparser\/error\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/jsonparser\/error\/isurlcancelled","title":"var isURLCancelled: Bool","type":"property"},{"path":"\/documentation\/bswfoundation\/jsonparser\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bswfoundation\/jsonparser\/error\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/jsonparser\/error\/isurlcancelled","title":"var isURLCancelled: Bool","type":"property"},{"path":"\/documentation\/bswfoundation\/jsonparser\/error\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bswfoundation\/jsonparser\/error\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/bswfoundation\/jsonparser\/error","title":"JSONParser.Error","type":"enum"}],"path":"\/documentation\/bswfoundation\/jsonparser","title":"JSONParser","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/mimetype\/custom(_:)","title":"case custom(String)","type":"case"},{"path":"\/documentation\/bswfoundation\/mimetype\/imagejpeg","title":"case imageJPEG","type":"case"},{"path":"\/documentation\/bswfoundation\/mimetype\/imagepng","title":"case imagePNG","type":"case"}],"path":"\/documentation\/bswfoundation\/mimetype","title":"MimeType","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/foundation\/bundle\/osname","title":"var osName: String","type":"property"}],"path":"\/documentation\/bswfoundation\/foundation\/bundle","title":"Bundle","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/foundation\/processinfo\/iscatalystoriiosapponmac","title":"var isCatalystOriIOSAppOnMac: Bool","type":"property"}],"path":"\/documentation\/bswfoundation\/foundation\/processinfo","title":"ProcessInfo","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/foundation\/urlsession\/fetchdata(with:)","title":"func fetchData(with: URLRequest) async throws -> APIClient.Response","type":"method"},{"path":"\/documentation\/bswfoundation\/foundation\/urlsession\/uploadfile(with:fileurl:)","title":"func uploadFile(with: URLRequest, fileURL: URL) async throws -> APIClient.Response","type":"method"}],"path":"\/documentation\/bswfoundation\/foundation\/urlsession\/apiclientnetworkfetcher-implementations","title":"APIClientNetworkFetcher Implementations","type":"symbol"}],"path":"\/documentation\/bswfoundation\/foundation\/urlsession","title":"URLSession","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/foundation\/date\/formattedstringtimestamp(_:)","title":"func formattedStringTimestamp(Bool) -> String","type":"method"},{"path":"\/documentation\/bswfoundation\/foundation\/date\/timestamp(includemiliseconds:)","title":"func timestamp(includeMiliseconds: Bool) -> UInt64","type":"method"}],"path":"\/documentation\/bswfoundation\/foundation\/date","title":"Date","type":"extension"}],"path":"\/documentation\/bswfoundation\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/swift\/collection\/randomelement","title":"var randomElement: Iterator.Element","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/swift\/collection\/subscript(safe:)","title":"subscript(safe _: Index) -> Element?","type":"subscript"}],"path":"\/documentation\/bswfoundation\/swift\/collection","title":"Collection","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/swift\/error\/isurlcancelled","title":"var isURLCancelled: Bool","type":"property"}],"path":"\/documentation\/bswfoundation\/swift\/error","title":"Error","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/swift\/mutablecollection\/shuffle()","title":"func shuffle()","type":"method"}],"path":"\/documentation\/bswfoundation\/swift\/mutablecollection","title":"MutableCollection","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/swift\/sequence\/asyncforeach(_:)","title":"func asyncForEach((Element) async throws -> Void) async rethrows","type":"method"},{"path":"\/documentation\/bswfoundation\/swift\/sequence\/asyncmap(_:)","title":"func asyncMap<T>((Element) async throws -> T) async rethrows -> [T]","type":"method"},{"path":"\/documentation\/bswfoundation\/swift\/sequence\/find(predicate:)","title":"func find(predicate: (Self.Iterator.Element) throws -> Bool) rethrows -> Self.Iterator.Element?","type":"method"}],"path":"\/documentation\/bswfoundation\/swift\/sequence","title":"Sequence","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/swift\/array\/moveitem(fromindex:toindex:)","title":"func moveItem(fromIndex: Index, toIndex: Index)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/swift\/array\/datedecodingstrategy","title":"static var dateDecodingStrategy: DateFormatter","type":"property"}],"path":"\/documentation\/bswfoundation\/swift\/array\/datedecodingstrategyprovider-implementations","title":"DateDecodingStrategyProvider Implementations","type":"symbol"}],"path":"\/documentation\/bswfoundation\/swift\/array","title":"Array","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/swift\/dictionary\/init(elements:)","title":"init(elements: [(Key, Value)])","type":"init"}],"path":"\/documentation\/bswfoundation\/swift\/dictionary","title":"Dictionary","type":"extension"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/swift\/int\/random(_:)","title":"static func random(ClosedRange<Int>) -> Int","type":"method"}],"path":"\/documentation\/bswfoundation\/swift\/int","title":"Int","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/swift\/string\/capitalizefirst","title":"var capitalizeFirst: String","type":"property"},{"path":"\/documentation\/bswfoundation\/swift\/string\/length","title":"var length: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/swift\/string\/hmac(algorithm:key:)","title":"func hmac(algorithm: CryptoAlgorithm, key: String) -> String","type":"method"},{"path":"\/documentation\/bswfoundation\/swift\/string\/trimmedstringandwithoutnewlinecharacters()","title":"func trimmedStringAndWithoutNewlineCharacters() -> String","type":"method"}],"path":"\/documentation\/bswfoundation\/swift\/string","title":"String","type":"extension"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/swift\/uint32\/random","title":"static var random: UInt32","type":"property"}],"path":"\/documentation\/bswfoundation\/swift\/uint32","title":"UInt32","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/swift\/uint64\/plusintmin","title":"var plusIntMin: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/swift\/uint64\/random","title":"static var random: UInt64","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/swift\/uint64\/distance(_:)","title":"static func distance(ClosedRange<Int>) -> UInt64","type":"method"}],"path":"\/documentation\/bswfoundation\/swift\/uint64","title":"UInt64","type":"extension"}],"path":"\/documentation\/bswfoundation\/swift","title":"Swift","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/uikit\/uiapplication\/isrunningtests","title":"var isRunningTests: Bool","type":"property"}],"path":"\/documentation\/bswfoundation\/uikit\/uiapplication","title":"UIApplication","type":"extension"}],"path":"\/documentation\/bswfoundation\/uikit","title":"UIKit","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/_concurrency\/task\/valueerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/_concurrency\/task\/valueerror\/isurlcancelled","title":"var isURLCancelled: Bool","type":"property"},{"path":"\/documentation\/bswfoundation\/_concurrency\/task\/valueerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bswfoundation\/_concurrency\/task\/valueerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/_concurrency\/task\/valueerror\/isurlcancelled","title":"var isURLCancelled: Bool","type":"property"},{"path":"\/documentation\/bswfoundation\/_concurrency\/task\/valueerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/bswfoundation\/_concurrency\/task\/valueerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/_concurrency\/task\/valueerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/bswfoundation\/_concurrency\/task\/valueerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/bswfoundation\/_concurrency\/task\/valueerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/bswfoundation\/_concurrency\/task\/valueerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/bswfoundation\/_concurrency\/task\/valueerror","title":"Task.ValueError","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/_concurrency\/task\/never","title":"static var never: Void","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/bswfoundation\/_concurrency\/task\/never()","title":"static func never<T>() async throws -> T","type":"method"},{"path":"\/documentation\/bswfoundation\/_concurrency\/task\/wait(operation:)","title":"static func wait<T>(operation: () async throws -> T) throws -> T","type":"method"}],"path":"\/documentation\/bswfoundation\/_concurrency\/task","title":"Task","type":"extension"}],"path":"\/documentation\/bswfoundation\/_concurrency","title":"_Concurrency","type":"extension"}],"path":"\/documentation\/bswfoundation","title":"BSWFoundation","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}